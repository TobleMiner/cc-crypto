os.loadAPI('util/include')

Message, MessageAssoc = require('lib/cryptnet/message.lua')

msg = {type = Message.type.DEASSOC, id = 42, id_recipient = 23, id_a = 0, id_b = 42, keyid = 0, challenge = 'asdfasda', hmac = 'hitler'}

message = Message.parse(nil, msg)

function printTable(tbl, prefix)
	if not prefix then
		prefix = ''
	end
	
	for k,v in pairs(tbl) do
		print(prefix .. k .. ':')
		if type(v) == 'table' then
			printTable(v, prefix .. '\t')
		else
			print(prefix .. '\t' .. tostring(v))
		end
	end
end

printTable(message)

--[[
os.loadAPI('parallel')

local TimerManger = require('lib/timer.lua')

local manager = TimerManger.new()

local function callback(str1, str2)
	print(str1)
	print(str2)
end

local function doStuff()
	manager:setTimeout(callback, 3000, "Hello", "World")
end

parallel.waitForAll(function() manager:run() end, doStuff)

]]